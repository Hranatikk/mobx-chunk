"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[666],{562:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"concepts/persistence","title":"Persistence Setup","description":"To persist store fields across sessions, mobx-chunk lets you plug in any storage engine via configurePersistenceEngine. Below are examples for React Native (MMKV, AsyncStorage) and web (localStorage).","source":"@site/docs/concepts/persistence.md","sourceDirName":"concepts","slug":"/concepts/persistence","permalink":"/mobx-chunk/docs/concepts/persistence","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Subscribe to Changes","permalink":"/mobx-chunk/docs/concepts/subscribe-to-changes"},"next":{"title":"Middleware Setup","permalink":"/mobx-chunk/docs/concepts/middleware"}}');var t=s(4848),o=s(8453);const c={sidebar_position:3},i="Persistence Setup",a={},l=[{value:"configurePersistenceEngine",id:"configurepersistenceengine",level:2},{value:"React Native: MMKV Example",id:"react-native-mmkv-example",level:2},{value:"React Native: AsyncStorage Example",id:"react-native-asyncstorage-example",level:2},{value:"React (Web): <code>localStorage</code> Example",id:"react-web-localstorage-example",level:2}];function g(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"persistence-setup",children:"Persistence Setup"})}),"\n",(0,t.jsxs)(n.p,{children:["To persist store fields across sessions, ",(0,t.jsx)(n.strong,{children:"mobx-chunk"})," lets you plug in any storage engine via ",(0,t.jsx)(n.code,{children:"configurePersistenceEngine"}),". Below are examples for React Native (MMKV, AsyncStorage) and web (localStorage)."]}),"\n",(0,t.jsx)(n.h2,{id:"configurepersistenceengine",children:"configurePersistenceEngine"}),"\n",(0,t.jsx)(n.p,{children:"Before using any persisted chunks, initialize the persistence engine once in your app\u2019s entry point:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import { configurePersistenceEngine } from "mobx-chunk";\n\nconfigurePersistenceEngine({\n  clear: () => {/* remove all keys */},\n  get:   (key: string) => /* return string | Promise<string | null> */,\n  remove:(key: string) => /* remove one key */,\n  set:   (key: string, value: string) => /* set one key */,\n});\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"clear(key?)"}),": Remove all or scoped entries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"get(key)"}),": Return the stored string or a promise resolving to it."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"remove(key)"}),": Delete a specific key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"set(key, value)"}),": Store a string value."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"react-native-mmkv-example",children:"React Native: MMKV Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import React from "react";\nimport { MMKV } from "react-native-mmkv";\nimport { configurePersistenceEngine } from "mobx-chunk";\n\nconst storage = new MMKV();\n\nconfigurePersistenceEngine({\n  clear: () => storage.clearAll(),\n  get:    (key) => storage.getString(key),\n  remove: (key) => storage.delete(key),\n  set:    (key, value) => storage.set(key, value),\n});\n\nconst App = () => (\n  // Your app goes here\n  <></>\n);\n\nexport default App;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"react-native-asyncstorage-example",children:"React Native: AsyncStorage Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'import React from "react";\nimport AsyncStorage from "@react-native-async-storage/async-storage";\nimport { configurePersistenceEngine } from "mobx-chunk";\n\nconfigurePersistenceEngine({\n  clear:  () => AsyncStorage.clear(),\n  get:    (key) => AsyncStorage.getItem(key),\n  remove: (key) => AsyncStorage.removeItem(key),\n  set:    (key, value) => AsyncStorage.setItem(key, value),\n});\n\nconst App = () => (\n  // Your app goes here\n  <></>\n);\n\nexport default App;\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"react-web-localstorage-example",children:["React (Web): ",(0,t.jsx)(n.code,{children:"localStorage"})," Example"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import React from "react";\nimport { configurePersistenceEngine } from "mobx-chunk";\n\nconfigurePersistenceEngine({\n  clear:  () => Promise.resolve(localStorage.clear()),\n  get:    (key) => Promise.resolve(localStorage.getItem(key)),\n  remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n  set:    (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n});\n\nconst App = () => (\n  // Your app goes here\n  <></>\n);\n\nexport default App;\n'})}),"\n",(0,t.jsxs)(n.p,{children:["With the engine configured, any chunk using the ",(0,t.jsx)(n.code,{children:"persist"})," option will automatically read and write state to your chosen storage backend."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var r=s(6540);const t={},o=r.createContext(t);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);