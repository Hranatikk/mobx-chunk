"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[586],{8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(6540);const s={},a=n.createContext(s);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:t},e.children)}},9438:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"usage/adapters/storageAdapter","title":"Storage Adapter","description":"Configure custom storage for persistence.","source":"@site/docs/usage/adapters/storageAdapter.md","sourceDirName":"usage/adapters","slug":"/usage/adapters/storageAdapter","permalink":"/mobx-chunk/docs/usage/adapters/storageAdapter","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Middleware Adapter","permalink":"/mobx-chunk/docs/usage/adapters/middlewareAdapter"},"next":{"title":"Hooks","permalink":"/mobx-chunk/docs/category/hooks"}}');var s=r(4848),a=r(8453);const o={sidebar_position:2},i="Storage Adapter",c={},d=[{value:"Import",id:"import",level:2},{value:"Example",id:"example",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"storage-adapter",children:"Storage Adapter"})}),"\n",(0,s.jsx)(t.p,{children:"Configure custom storage for persistence."}),"\n",(0,s.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { configurePersistenceEngine } from 'mobx-chunk'\n"})}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'import { MMKV } from "react-native-mmkv"\n\nimport { MMKV } from "react-native-mmkv"\n\nconst storage = new MMKV() // OR use sync localstorage \n\nconfigurePersistenceEngine({\n  get: (key) => storage.getString(key),\n  remove: (key) => storage.delete(key),\n  set: (key, value) => storage.set(key, value),\n})\n'})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);