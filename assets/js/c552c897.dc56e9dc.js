"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{6217:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"concepts/subscribe-to-changes","title":"Subscribe to Changes","description":"mobx-chunk provides easy-to-use React hooks to reactively subscribe to store changes and keep your components in sync.","source":"@site/docs/concepts/subscribe-to-changes.md","sourceDirName":"concepts","slug":"/concepts/subscribe-to-changes","permalink":"/mobx-chunk/docs/concepts/subscribe-to-changes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Create Chunk","permalink":"/mobx-chunk/docs/concepts/create-chunk"},"next":{"title":"Persistence Setup","permalink":"/mobx-chunk/docs/concepts/persistence"}}');var t=s(4848),i=s(8453);const c={sidebar_position:2},r="Subscribe to Changes",l={},a=[{value:"Hooks Overview",id:"hooks-overview",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Details",id:"details",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"subscribe-to-changes",children:"Subscribe to Changes"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"mobx-chunk"})," provides easy-to-use React hooks to reactively subscribe to store changes and keep your components in sync."]}),"\n",(0,t.jsx)(n.h2,{id:"hooks-overview",children:"Hooks Overview"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"useValues"})}),": Subscribe to multiple store-derived values in one call. Triggers re-render when any selected value changes."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"useComputed"})}),": Subscribe to a single derived value. Ideal for isolated pieces of state or complex selectors."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:'import React from "react";\nimport { useValues, useComputed } from "mobx-chunk";\nimport { todoStore } from "./todo-store-path";\n\nconst Component = () => {\n  // Subscribe to multiple values at once\n  const { todoList, isLoading } = useValues({\n    todoList: () => todoStore.selectors.getTodoList,\n    isLoading: () => todoStore.isLoading.asyncFunctionExample,\n  });\n\n  // Subscribe to individual values separately\n  const singleTodoList = useComputed(\n    () => todoStore.selectors.getTodoList\n  );\n  const singleLoadingFlag = useComputed(\n    () => todoStore.isLoading.asyncFunctionExample\n  );\n\n  // Invoke an async action and await completion\n  const handleCallAsyncFunction = async () => {\n    await todoStore.asyncActions.asyncFunctionExample();\n  };\n\n  // Invoke a custom synchronous action\n  const handleCallCustomAction = () => {\n    todoStore.actions.addNewPost({\n      id: Date.now(),\n      title: \'Title example\',\n      isComplete: false,\n    });\n  };\n\n  // Access store values outside React components\n  const handleGetValue = () => {\n    console.log(todoStore.selectors.getCompletedTodo());\n  };\n\n  return (\n    // Your UI goes here\n    <></>\n  );\n};\n\nexport default Component;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Batch subscriptions (",(0,t.jsx)(n.code,{children:"useValues"}),")"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pass an object whose keys will map to local variables."}),"\n",(0,t.jsx)(n.li,{children:"Each field is a function returning a selector or loading flag."}),"\n",(0,t.jsx)(n.li,{children:"The hook returns an object with current values."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Single subscriptions (",(0,t.jsx)(n.code,{children:"useComputed"}),")"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pass a function returning the selector or flag."}),"\n",(0,t.jsx)(n.li,{children:"Returns the current value directly."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Async Actions"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Available under ",(0,t.jsx)(n.code,{children:"store.asyncActions"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Returns a promise; use ",(0,t.jsx)(n.code,{children:"await"})," in handlers."]}),"\n",(0,t.jsxs)(n.li,{children:["Loading flags auto-update under ",(0,t.jsx)(n.code,{children:"store.isLoading"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Actions"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Available under ",(0,t.jsx)(n.code,{children:"store.actions"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Invoke directly to update state synchronously."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Outside React"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Call ",(0,t.jsx)(n.code,{children:"store.selectors"}),", ",(0,t.jsx)(n.code,{children:"store.actions"}),", or ",(0,t.jsx)(n.code,{children:"store.asyncActions"})," anywhere."]}),"\n",(0,t.jsx)(n.li,{children:"Useful for logging, timers, or non-UI logic."}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var o=s(6540);const t={},i=o.createContext(t);function c(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);