"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{7879:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"intro","title":"Introduction","description":"Welcome to mobx-chunk, a lightweight, type-safe factory for building MobX-powered state slices (\\"chunks\\") with minimal boilerplate. Whether you\u2019re managing simple local state or complex asynchronous flows, mobx-chunk helps you stay organized and scalable.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/mobx-chunk/docs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Concepts","permalink":"/mobx-chunk/docs/category/concepts"}}');var o=s(4848),r=s(8453);const i={sidebar_position:1},c="Introduction",a={},l=[{value:"Motivation",id:"motivation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"What you\u2019ll need",id:"what-youll-need",level:3},{value:"Install",id:"install",level:3},{value:"Basic Example",id:"basic-example",level:2},{value:"1. Create the store chunk",id:"1-create-the-store-chunk",level:3},{value:"2. Use in a React component",id:"2-use-in-a-react-component",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,o.jsxs)(n.p,{children:["Welcome to ",(0,o.jsx)(n.strong,{children:"mobx-chunk"}),', a lightweight, type-safe factory for building MobX-powered state slices ("chunks") with minimal boilerplate. Whether you\u2019re managing simple local state or complex asynchronous flows, mobx-chunk helps you stay organized and scalable.']}),"\n",(0,o.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Automatic Actions & Selectors"}),": For every value in your state, mobx-chunk generates a ",(0,o.jsx)(n.code,{children:"set${ValueKey}"})," action and a ",(0,o.jsx)(n.code,{children:"get${ValueKey}"})," selector, ensuring consistent naming and reducing manual code."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Async Actions & Loading Flags"}),": Easily define asynchronous processes, with autogenerated loading indicators (",(0,o.jsx)(n.code,{children:"store.isLoading.yourAsyncAction"}),") so you can track request states in your UI."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Type Safety"}),": Leveraging TypeScript\u2019s type inference, your store, actions, and selectors are fully typed, catching errors at compile time."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Persistence"}),": Opt into persisting specific fields to local storage or any custom engine, keeping user data across sessions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React Integration"}),": Use provided hooks (",(0,o.jsx)(n.code,{children:"useValues"}),", ",(0,o.jsx)(n.code,{children:"useComputed"}),") for seamless, observable-driven updates in your components."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsx)(n.h3,{id:"what-youll-need",children:"What you\u2019ll need"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React"})," (v17 or above) or ",(0,o.jsx)(n.strong,{children:"React Native"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MobX"})," (v6 or above)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"TypeScript"})," (v4 or above) \u2013 optional but recommended for type safety"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# with npm\nnpm install mobx-chunk\n\n# with yarn\nyarn add mobx-chunk\n"})}),"\n",(0,o.jsx)(n.h2,{id:"basic-example",children:"Basic Example"}),"\n",(0,o.jsx)(n.p,{children:"Below is a minimal example showing how to define a store chunk and consume it in a React Native component."}),"\n",(0,o.jsx)(n.h3,{id:"1-create-the-store-chunk",children:"1. Create the store chunk"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { createChunk } from "mobx-chunk";\n\nexport type TState = {\n  accessToken: string;\n};\n\nexport const store = createChunk<TState>({\n  name: "store",\n  initialState: {\n    accessToken: "",\n  } satisfies TState,\n  persist: ["accessToken"],\n});\n\nexport type TStore = typeof store;\n'})}),"\n",(0,o.jsx)(n.p,{children:"This generates:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"store.actions.setAccessToken"})})," for updating the token"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"store.selectors.getAccessToken"})})," for reading the token"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"store.asyncActions"})})," for any custom async flows (not included in this example)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"store.isLoading"})})," flags for each async action (not included in this example)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-use-in-a-react-component",children:"2. Use in a React component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import React from "react";\nimport { useValues } from "mobx-chunk";\nimport { store } from "./your-store-path";\n\nconst Component = () => {\n  const { accessToken } = useValues({\n    accessToken: () => store.selectors.getAccessToken, // subscribe to accessToken changing\n  });\n\n  return (\n    /**\n     * your component goes here\n     * */\n  );\n};\n\nexport default Component;\n'})}),"\n",(0,o.jsx)(n.p,{children:"With mobx-chunk\u2019s hooks, your component will automatically re-render when the selected state changes."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"For more details on advanced hooks, persistence configuration, and middleware support, explore the other sections of the documentation."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(6540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);