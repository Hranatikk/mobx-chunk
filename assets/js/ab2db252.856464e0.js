"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[309],{7529:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/useComputed","title":"API: useComputed","description":"React hook for subscribing to a single MobX chunk-derived value or loading flag. Re-renders your component when the selected value changes.","source":"@site/docs/api/useComputed.md","sourceDirName":"api","slug":"/api/useComputed","permalink":"/mobx-chunk/docs/api/useComputed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"API: useValues","permalink":"/mobx-chunk/docs/api/useValues"},"next":{"title":"API: combineAsync","permalink":"/mobx-chunk/docs/api/combineAsync"}}');var s=o(4848),r=o(8453);const i={sidebar_position:4},l="API: useComputed",c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Example",id:"example",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"api-usecomputed",children:["API: ",(0,s.jsx)(n.code,{children:"useComputed"})]})}),"\n",(0,s.jsx)(n.p,{children:"React hook for subscribing to a single MobX chunk-derived value or loading flag. Re-renders your component when the selected value changes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function useComputed<Value>(\n  selector: () => Value\n): Value\n"})}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"selector"}),": A function returning the desired store value, loading flag, or any computed expression."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Typically references ",(0,s.jsx)(n.code,{children:"store.selectors.getXyz"})," or ",(0,s.jsx)(n.code,{children:"store.isLoading.someAsyncAction"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Executed on render to subscribe, and again whenever the underlying observable changes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The current value of the selector:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const count = useComputed(() => counterStore.selectors.getCount);\n// count: number\n"})}),"\n",(0,s.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Subscribes to the provided selector in one hook."}),"\n",(0,s.jsx)(n.li,{children:"Triggers a re-render when the selected value changes."}),"\n",(0,s.jsx)(n.li,{children:"Unsubscribes automatically when the component unmounts."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import React from "react";\nimport { useComputed } from "mobx-chunk";\nimport { todoStore } from "./todo-store";\n\nconst TodoStats = () => {\n  // Subscribe to the full list\n  const todoList = useComputed(\n    () => todoStore.selectors.getTodoList\n  );\n\n  // Subscribe to loading flag\n  const isLoading = useComputed(\n    () => todoStore.isLoading.fetchTodos\n  );\n\n  if (isLoading) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <div>\n      <p>Total todos: {todoList.length}</p>\n      <p>Completed todos: {todoList.filter(t => t.isComplete).length}</p>\n    </div>\n  );\n};\n\nexport default TodoStats;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"useComputed"})," when you need a single reactive value in your component without the overhead of batching multiple selectors."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);