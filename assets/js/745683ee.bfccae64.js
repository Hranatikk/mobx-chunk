"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6],{5097:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/addActionInterceptor","title":"API: addActionInterceptor","description":"Register a global middleware function that intercepts chunk actions and async actions. Useful for validation, logging, or performance tracking.","source":"@site/docs/api/addActionInterceptor.md","sourceDirName":"api","slug":"/api/addActionInterceptor","permalink":"/mobx-chunk/docs/api/addActionInterceptor","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"API: configurePersistenceEngine","permalink":"/mobx-chunk/docs/api/configurePersistenceEngine"}}');var o=t(4848),i=t(8453);const c={sidebar_position:8},a="API: addActionInterceptor",s={},l=[{value:"<code>ActionContext</code> Interface",id:"actioncontext-interface",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Behavior",id:"behavior",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"api-addactioninterceptor",children:["API: ",(0,o.jsx)(n.code,{children:"addActionInterceptor"})]})}),"\n",(0,o.jsx)(n.p,{children:"Register a global middleware function that intercepts chunk actions and async actions. Useful for validation, logging, or performance tracking."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"function addActionInterceptor(\n  interceptor: (\n    ctx: ActionContext,\n    next: () => any\n  ) => any\n): void\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"actioncontext-interface",children:[(0,o.jsx)(n.code,{children:"ActionContext"})," Interface"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"interface ActionContext {\n  /**\n   * Name of the chunk (store) where the action is defined.\n   */\n  chunkName: string;\n\n  /**\n   * Name of the action or async action being executed.\n   */\n  actionName: string;\n\n  /**\n   * Arguments passed to the action.\n   */\n  args: any[];\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"interceptor"}),": A function called before an action executes."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Receives a ",(0,o.jsx)(n.code,{children:"ctx"})," object with ",(0,o.jsx)(n.code,{children:"chunkName"}),", ",(0,o.jsx)(n.code,{children:"actionName"}),", and ",(0,o.jsx)(n.code,{children:"args"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Must call ",(0,o.jsx)(n.code,{children:"next()"})," to continue the chain and eventually run the action."]}),"\n",(0,o.jsx)(n.li,{children:"Can throw errors to halt execution or modify behavior."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Registration"}),": Call once at app startup. Interceptors apply globally in registration order."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Interception"}),": For each action or async action invocation, all registered interceptors run sequentially."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Chaining"}),": Each interceptor calls ",(0,o.jsx)(n.code,{children:"next()"})," to pass control to the next interceptor or final action."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Error Handling"}),": Throwing inside an interceptor stops further interceptors and prevents the action from running."]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," Currently, interceptors apply to async actions. In the next release, support will expand to include separate interceptor types for sync actions, async actions, and general actions."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { addActionInterceptor } from "mobx-chunk";\n\n// Validate that payload has an \'email\' field when calling \'createUser\'\naddActionInterceptor((ctx, next) => {\n  if (ctx.actionName === "createUser") {\n    const [payload] = ctx.args;\n    if (!payload || typeof payload.email !== "string") {\n      throw new Error(\n        `[ValidationError] ${ctx.chunkName}.${ctx.actionName} expects { email: string }`\n      );\n    }\n  }\n  // Continue to next interceptor or actual action\n  return next();\n});\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"addActionInterceptor"})," to enforce data integrity, log user interactions, or measure performance across your mobx-chunk stores."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);